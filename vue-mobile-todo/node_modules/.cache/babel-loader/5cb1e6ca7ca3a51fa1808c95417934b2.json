{"ast":null,"code":"import _objectSpread from \"/Users/jinyuntae/Desktop/basic_programming/University/mobile_programming/mobile-programming-public/vue-mobile-todo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: [\"propsdata\"],\n  data: function data() {\n    return {\n      selectedTodo: null,\n      // 선택된 투두아이템 (전체) // 취소 눌렀을때 돌아가게 할려고 만들었음\n      selectedTodoTitle: \"\",\n      // 선택된 투두 아이템의 제목\n      selectedTodoMemo: \"\",\n      // 선택된 투두 아이템의 메모\n      selectedTodoIndex: \"\",\n      // 선택된 투두 아이템의 분류(index)\n      showDialog: false,\n      // 상세보기 보여줄건지 말건지\n      updateMode: false // 수정모드인지 아닌지\n\n    };\n  },\n  methods: {\n    // 할 일 완료\n    finishTodo: function finishTodo(id) {\n      this.$emit(\"finishTodo\", id);\n    },\n    // 할 일 삭제\n    removeTodo: function removeTodo(id) {\n      this.$emit(\"removeTodo\", id);\n    },\n    // 상세보기 보여주기 (여기서 selectedTodo를 세팅함)\n    showTodoDetail: function showTodoDetail(id) {\n      var selectedTodo = this.propsdata.find(function (item) {\n        return item.id === id;\n      });\n      this.selectedTodo = selectedTodo;\n      this.selectedTodoTitle = selectedTodo.title;\n      this.selectedTodoMemo = selectedTodo.memo;\n      this.selectedTodoIndex = selectedTodo.index;\n      this.showDialog = true;\n    },\n    // 상세보기 닫기 (다 초기화)\n    closeTodoDetail: function closeTodoDetail() {\n      this.selectedTodo = null;\n      this.selectedTodoTitle = \"\";\n      this.selectedTodoMemo = \"\";\n      this.selectedTodoIndex = \"\";\n      this.showDialog = false;\n      this.updateMode = false;\n    },\n    // 수정 모드 진입 (Text Input 눌렀을때 수정모드 진입할 수 있게 하기 위함)\n    openUpdateMode: function openUpdateMode() {\n      if (!this.updateMode) {\n        this.updateMode = true;\n      }\n    },\n    // 완료 버튼 클릭\n    clickFinish: function clickFinish() {\n      this.finishTodo(this.selectedTodo.id);\n      this.showDialog = false;\n    },\n    // 편집 버튼 클릭\n    clickEdit: function clickEdit() {\n      this.updateMode = true;\n    },\n    // 삭제 버튼 클릭\n    clickDelete: function clickDelete() {\n      this.removeTodo(this.selectedTodo.id);\n      this.showDialog = false;\n    },\n    // 취소 버튼 클릭\n    clickCancel: function clickCancel() {\n      var _this$selectedTodo = this.selectedTodo,\n          title = _this$selectedTodo.title,\n          memo = _this$selectedTodo.memo,\n          index = _this$selectedTodo.index;\n      this.selectedTodoTitle = title;\n      this.selectedTodoMemo = memo;\n      this.selectedTodoIndex = index;\n      this.updateMode = false;\n    },\n    // 저장 버튼 클릭\n    clickSave: function clickSave() {\n      this.$emit(\"updateTodo\", {\n        id: this.selectedTodo.id,\n        title: this.selectedTodoTitle,\n        memo: this.selectedTodoMemo,\n        index: this.selectedTodoIndex\n      });\n      this.selectedTodo = _objectSpread(_objectSpread({}, this.selectedTodo), {}, {\n        title: this.selectedTodoTitle,\n        memo: this.selectedTodoMemo,\n        index: this.selectedTodoIndex\n      });\n      this.updateMode = false;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACAA,sBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,wBADA;AACA;AACAC,2BAFA;AAEA;AACAC,0BAHA;AAGA;AACAC,2BAJA;AAIA;AACAC,uBALA;AAKA;AACAC,uBANA,CAMA;;AANA;AAQA,GAXA;AAYAC;AACA;AACAC,cAFA,sBAEAC,EAFA,EAEA;AACA;AACA,KAJA;AAMA;AACAC,cAPA,sBAOAD,EAPA,EAOA;AACA;AACA,KATA;AAWA;AACAE,kBAZA,0BAYAF,EAZA,EAYA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,KAnBA;AAqBA;AACAG,mBAtBA,6BAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA7BA;AA+BA;AACAC,kBAhCA,4BAgCA;AACA;AACA;AACA;AACA,KApCA;AAsCA;AACAC,eAvCA,yBAuCA;AACA;AACA;AACA,KA1CA;AA4CA;AACAC,aA7CA,uBA6CA;AACA;AACA,KA/CA;AAiDA;AACAC,eAlDA,yBAkDA;AACA;AACA;AACA,KArDA;AAuDA;AACAC,eAxDA,yBAwDA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,KA9DA;AAgEA;AACAC,aAjEA,uBAiEA;AACA;AAAAT;AAAAU;AAAAC;AAAAC;AAAA;AACA;AAAAF;AAAAC;AAAAC;AAAA;AACA;AACA;AArEA;AAZA","names":["props","data","selectedTodo","selectedTodoTitle","selectedTodoMemo","selectedTodoIndex","showDialog","updateMode","methods","finishTodo","id","removeTodo","showTodoDetail","closeTodoDetail","openUpdateMode","clickFinish","clickEdit","clickDelete","clickCancel","clickSave","title","memo","index"],"sourceRoot":"src/components","sources":["TodoList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <transition-group class=\"pl-0\" name=\"list\" tag=\"ul\">\n      <!-- 상태가 todo인것만 보여줌 (v-show) -->\n      <v-card shaped class=\"mb-2\" v-for=\"(todoItem) in propsdata\" :key=\"todoItem.id\" v-show=\"(todoItem.state === 'todo')\">\n        <v-card-actions>\n          <v-list-item class=\"list_item\">\n            <v-list-item-avatar @click=\"finishTodo(todoItem.id)\">\n              <v-icon class=\"grey lighten-1\" dark> mdi-check </v-icon>\n            </v-list-item-avatar>\n\n            <v-list-item-content @click=\"showTodoDetail(todoItem.id)\">\n              <v-list-item-title v-text=\"todoItem.title\"></v-list-item-title>\n            </v-list-item-content>\n\n            <v-list-item-content class=\"text-right\">\n              <v-list-item-title v-text=\"todoItem.index\"></v-list-item-title>\n            </v-list-item-content>\n\n            <v-list-item-action @click=\"removeTodo(todoItem.id)\">\n              <v-btn icon>\n                <v-icon>mdi-close</v-icon>\n              </v-btn>\n            </v-list-item-action>\n          </v-list-item>\n        </v-card-actions>\n      </v-card>\n    </transition-group>\n\n    <v-dialog\n      v-model=\"showDialog\"\n      fullscreen\n      hide-overlay\n      transition=\"dialog-bottom-transition\"\n    >\n        <v-card>\n            <v-toolbar\n                dark\n                color=\"primary\"\n            >\n                <v-btn\n                    icon\n                    dark\n                    @click=\"closeTodoDetail()\"\n                >\n                    <v-icon>mdi-close</v-icon>\n                </v-btn>\n                <v-toolbar-title>Detail</v-toolbar-title>\n            </v-toolbar>\n            <v-list>\n                <v-list-item>\n                    <v-text-field\n                        label=\"할 일\"\n                        hide-details\n                        outlined\n                        :readonly=\"updateMode ? false : true\"\n                        v-model=\"selectedTodoTitle\"\n                        @click=\"openUpdateMode()\"\n                        class=\"pa-4\"\n                    ></v-text-field>\n                </v-list-item>\n                <v-list-item>\n                    <v-textarea\n                        label=\"메모\"\n                        hide-details\n                        outlined\n                        :readonly=\"updateMode ? false : true\"\n                        v-model=\"selectedTodoMemo\"\n                        @click=\"openUpdateMode()\"\n                        no-resize\n                        class=\"pa-4\"\n                    ></v-textarea>\n                </v-list-item>\n                <v-list-item>\n                    <v-textarea\n                        label=\"분류(index)\"\n                        hide-details\n                        outlined\n                        :readonly=\"updateMode ? false : true\"\n                        v-model=\"selectedTodoIndex\"\n                        @click=\"openUpdateMode()\"\n                        no-resize\n                        class=\"pa-4\"\n                    ></v-textarea>\n                </v-list-item>\n            </v-list>\n            <v-bottom-navigation fixed>\n                <v-row no-gutters v-if=\"!updateMode\">\n                    <v-col>\n                        <v-btn block height=\"100%\" @click=\"clickFinish()\">\n                            <span>완료</span>\n                        </v-btn>\n                    </v-col>\n                    <v-col>\n                        <v-btn block height=\"100%\" @click=\"clickEdit()\">\n                            <span>편집</span>\n                        </v-btn>\n                    </v-col>\n                    <v-col>\n                        <v-btn block height=\"100%\" @click=\"clickDelete()\">\n                            <span>삭제</span>\n                        </v-btn>\n                    </v-col>\n                </v-row>\n                <v-row no-gutters v-else>\n                    <v-col>\n                        <v-btn block height=\"100%\" @click=\"clickCancel()\">\n                            <span>취소</span>\n                        </v-btn>\n                    </v-col>\n                    <v-col>\n                        <v-btn block height=\"100%\" @click=\"clickSave()\">\n                            <span>저장</span>\n                        </v-btn>\n                    </v-col>\n                </v-row>\n            </v-bottom-navigation>\n        </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  props: [\"propsdata\"],\n  data() {\n    return {\n      selectedTodo: null,  // 선택된 투두아이템 (전체) // 취소 눌렀을때 돌아가게 할려고 만들었음\n      selectedTodoTitle: \"\", // 선택된 투두 아이템의 제목\n      selectedTodoMemo: \"\",  // 선택된 투두 아이템의 메모\n      selectedTodoIndex: \"\", // 선택된 투두 아이템의 분류(index)\n      showDialog: false,  // 상세보기 보여줄건지 말건지\n      updateMode: false,  // 수정모드인지 아닌지\n    }\n  },\n  methods: {\n    // 할 일 완료\n    finishTodo(id) {\n      this.$emit(\"finishTodo\", id);\n    },\n\n    // 할 일 삭제\n    removeTodo(id) {\n      this.$emit(\"removeTodo\", id);\n    },\n\n    // 상세보기 보여주기 (여기서 selectedTodo를 세팅함)\n    showTodoDetail(id) {\n      const selectedTodo = this.propsdata.find((item) => item.id === id);\n      this.selectedTodo = selectedTodo;\n      this.selectedTodoTitle = selectedTodo.title;\n      this.selectedTodoMemo = selectedTodo.memo;\n      this.selectedTodoIndex = selectedTodo.index;\n      this.showDialog = true;\n    },\n\n    // 상세보기 닫기 (다 초기화)\n    closeTodoDetail() {\n      this.selectedTodo = null;\n      this.selectedTodoTitle = \"\";\n      this.selectedTodoMemo = \"\";\n      this.selectedTodoIndex = \"\";\n      this.showDialog = false;\n      this.updateMode = false;\n    },\n\n    // 수정 모드 진입 (Text Input 눌렀을때 수정모드 진입할 수 있게 하기 위함)\n    openUpdateMode() {\n      if (!this.updateMode) {\n        this.updateMode = true;\n      }\n    },\n\n    // 완료 버튼 클릭\n    clickFinish() {\n      this.finishTodo(this.selectedTodo.id);\n      this.showDialog = false;\n    },\n\n    // 편집 버튼 클릭\n    clickEdit() {\n      this.updateMode = true;\n    },\n\n    // 삭제 버튼 클릭\n    clickDelete() {\n      this.removeTodo(this.selectedTodo.id);\n      this.showDialog = false;\n    },\n\n    // 취소 버튼 클릭\n    clickCancel() {\n      const { title, memo, index } = this.selectedTodo;\n      this.selectedTodoTitle = title;\n      this.selectedTodoMemo = memo;\n      this.selectedTodoIndex = index; \n      this.updateMode = false;\n    },\n\n    // 저장 버튼 클릭\n    clickSave() {\n      this.$emit(\"updateTodo\", { id: this.selectedTodo.id, title: this.selectedTodoTitle, memo: this.selectedTodoMemo, index: this.selectedTodoIndex });\n      this.selectedTodo = { ...this.selectedTodo, title: this.selectedTodoTitle, memo: this.selectedTodoMemo, index: this.selectedTodoIndex };\n      this.updateMode = false;\n    }\n  },\n};\n</script>\n\n<style scoped>\n.list_item {\n  width: 100%;\n  text-align: left;\n}\n.v-card--shaped {\n  border-radius: 24px 4px;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}