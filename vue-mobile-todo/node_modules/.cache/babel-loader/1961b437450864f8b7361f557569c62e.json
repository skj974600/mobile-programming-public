{"ast":null,"code":"import _objectSpread from \"C:/Users/windows10/Desktop/\\uD559\\uAD50 \\uC218\\uC5C5/\\uBAA8\\uBC14\\uC77C\\uD504\\uB85C\\uADF8\\uB798\\uBC0D/public/mobile-programming-public/vue-mobile-todo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: [\"propsdata\", \"grouping\"],\n  data: function data() {\n    return {\n      selectedTodo: null,\n      // 선택된 투두아이템 (전체) // 취소 눌렀을때 돌아가게 할려고 만들었음\n      selectedTodoTitle: \"\",\n      // 선택된 투두 아이템의 제목\n      selectedTodoMemo: \"\",\n      // 선택된 투두 아이템의 메모\n      selectedTodoIndex: \"\",\n      // 선택된 투두 아이템의 분류(index)\n      showDialog: false,\n      // 상세보기 보여줄건지 말건지\n      updateMode: false // 수정모드인지 아닌지\n\n    };\n  },\n  methods: {\n    // 할 일 완료\n    finishTodo: function finishTodo(id) {\n      this.$emit(\"finishTodo\", id);\n    },\n    // 할 일 삭제\n    removeTodo: function removeTodo(id) {\n      this.$emit(\"removeTodo\", id);\n    },\n    // 상세보기 보여주기 (여기서 selectedTodo를 세팅함)\n    showTodoDetail: function showTodoDetail(todo) {\n      // const selectedTodo = this.propsdata.find((item) => item.id === id);\n      this.selectedTodo = todo;\n      this.selectedTodoTitle = todo.title;\n      this.selectedTodoMemo = todo.memo;\n      this.selectedTodoIndex = todo.index;\n      this.showDialog = true;\n    },\n    // 상세보기 닫기 (다 초기화)\n    closeTodoDetail: function closeTodoDetail() {\n      this.selectedTodo = null;\n      this.selectedTodoTitle = \"\";\n      this.selectedTodoMemo = \"\";\n      this.selectedTodoIndex = \"\";\n      this.showDialog = false;\n      this.updateMode = false;\n    },\n    // 수정 모드 진입 (Text Input 눌렀을때 수정모드 진입할 수 있게 하기 위함)\n    openUpdateMode: function openUpdateMode() {\n      if (!this.updateMode) {\n        this.updateMode = true;\n      }\n    },\n    // 완료 버튼 클릭\n    clickFinish: function clickFinish() {\n      this.finishTodo(this.selectedTodo.id);\n      this.showDialog = false;\n    },\n    // 편집 버튼 클릭\n    clickEdit: function clickEdit() {\n      this.updateMode = true;\n    },\n    // 삭제 버튼 클릭\n    clickDelete: function clickDelete() {\n      this.removeTodo(this.selectedTodo.id);\n      this.showDialog = false;\n    },\n    // 취소 버튼 클릭\n    clickCancel: function clickCancel() {\n      var _this$selectedTodo = this.selectedTodo,\n          title = _this$selectedTodo.title,\n          memo = _this$selectedTodo.memo,\n          index = _this$selectedTodo.index;\n      this.selectedTodoTitle = title;\n      this.selectedTodoMemo = memo;\n      this.selectedTodoIndex = index;\n      this.updateMode = false;\n    },\n    // 저장 버튼 클릭\n    clickSave: function clickSave() {\n      this.$emit(\"updateTodo\", {\n        id: this.selectedTodo.id,\n        title: this.selectedTodoTitle,\n        memo: this.selectedTodoMemo,\n        index: this.selectedTodoIndex\n      });\n      this.selectedTodo = _objectSpread(_objectSpread({}, this.selectedTodo), {}, {\n        title: this.selectedTodoTitle,\n        memo: this.selectedTodoMemo,\n        index: this.selectedTodoIndex\n      });\n      this.updateMode = false;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;AACAA,kCADA;AAEAC,MAFA,kBAEA;AACA;AACAC,wBADA;AACA;AACAC,2BAFA;AAEA;AACAC,0BAHA;AAGA;AACAC,2BAJA;AAIA;AACAC,uBALA;AAKA;AACAC,uBANA,CAMA;;AANA;AAQA,GAXA;AAYAC;AACA;AACAC,cAFA,sBAEAC,EAFA,EAEA;AACA;AACA,KAJA;AAMA;AACAC,cAPA,sBAOAD,EAPA,EAOA;AACA;AACA,KATA;AAWA;AACAE,kBAZA,0BAYAC,IAZA,EAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnBA;AAqBA;AACAC,mBAtBA,6BAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA7BA;AA+BA;AACAC,kBAhCA,4BAgCA;AACA;AACA;AACA;AACA,KApCA;AAsCA;AACAC,eAvCA,yBAuCA;AACA;AACA;AACA,KA1CA;AA4CA;AACAC,aA7CA,uBA6CA;AACA;AACA,KA/CA;AAiDA;AACAC,eAlDA,yBAkDA;AACA;AACA;AACA,KArDA;AAuDA;AACAC,eAxDA,yBAwDA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,KA9DA;AAgEA;AACAC,aAjEA,uBAiEA;AACA;AACAV,gCADA;AAEAW,qCAFA;AAGAC,mCAHA;AAIAC;AAJA;AAMA,0DACA,iBADA;AAEAF,qCAFA;AAGAC,mCAHA;AAIAC;AAJA;AAMA;AACA;AA/EA;AAZA","names":["props","data","selectedTodo","selectedTodoTitle","selectedTodoMemo","selectedTodoIndex","showDialog","updateMode","methods","finishTodo","id","removeTodo","showTodoDetail","todo","closeTodoDetail","openUpdateMode","clickFinish","clickEdit","clickDelete","clickCancel","clickSave","title","memo","index"],"sourceRoot":"src/components","sources":["TodoList.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <div v-if=\"grouping\">\r\n      <!-- <v-card> -->\r\n      <transition-group class=\"pl-3\" name=\"list\" tag=\"ul\">\r\n        <div v-for=\"index in propsdata\" :key=\"index[0].index\">\r\n          <v-sheet\r\n            rounded=\"rounded\"\r\n            color=\"blue\"\r\n            height=\"30\"\r\n            width=\"50\"\r\n            class=\"test\"\r\n          >\r\n            <div class=\"index\">{{ index[0].index }}</div>\r\n          </v-sheet>\r\n          <!-- 상태가 todo인것만 보여줌 (v-show) -->\r\n          <v-card\r\n            shaped\r\n            class=\"mb-2 innerCard\"\r\n            v-for=\"todoItem in index\"\r\n            :key=\"todoItem.id\"\r\n            v-show=\"todoItem.state === 'todo'\"\r\n          >\r\n            <v-card-actions>\r\n              <v-list-item class=\"list_item\">\r\n                <v-list-item-avatar @click=\"finishTodo(todoItem.id)\">\r\n                  <v-icon class=\"grey lighten-1\" dark> mdi-check </v-icon>\r\n                </v-list-item-avatar>\r\n\r\n                <v-list-item-content @click=\"showTodoDetail(todoItem)\">\r\n                  <v-list-item-title\r\n                    v-text=\"todoItem.title\"\r\n                  ></v-list-item-title>\r\n                </v-list-item-content>\r\n\r\n                <v-list-item-content class=\"text-right\">\r\n                  <v-list-item-title\r\n                    v-text=\"todoItem.index\"\r\n                  ></v-list-item-title>\r\n                </v-list-item-content>\r\n\r\n                <v-list-item-action @click=\"removeTodo(todoItem.id)\">\r\n                  <v-btn icon>\r\n                    <v-icon>mdi-close</v-icon>\r\n                  </v-btn>\r\n                </v-list-item-action>\r\n              </v-list-item>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </div>\r\n      </transition-group>\r\n      <!-- </v-card> -->\r\n    </div>\r\n\r\n    <transition-group v-else class=\"pl-0\" name=\"list\" tag=\"ul\">\r\n      <!-- 상태가 todo인것만 보여줌 (v-show) -->\r\n      <v-card\r\n        shaped\r\n        class=\"mb-2\"\r\n        v-for=\"todoItem in propsdata\"\r\n        :key=\"todoItem.id\"\r\n        v-show=\"todoItem.state === 'todo'\"\r\n      >\r\n        <v-card-actions>\r\n          <v-list-item class=\"list_item\">\r\n            <v-list-item-avatar @click=\"finishTodo(todoItem.id)\">\r\n              <v-icon class=\"grey lighten-1\" dark> mdi-check </v-icon>\r\n            </v-list-item-avatar>\r\n\r\n            <v-list-item-content @click=\"showTodoDetail(todoItem)\">\r\n              <v-list-item-title v-text=\"todoItem.title\"></v-list-item-title>\r\n            </v-list-item-content>\r\n\r\n            <v-list-item-content class=\"text-right\">\r\n              <v-list-item-title v-text=\"todoItem.index\"></v-list-item-title>\r\n            </v-list-item-content>\r\n\r\n            <v-list-item-action @click=\"removeTodo(todoItem.id)\">\r\n              <v-btn icon>\r\n                <v-icon>mdi-close</v-icon>\r\n              </v-btn>\r\n            </v-list-item-action>\r\n          </v-list-item>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </transition-group>\r\n\r\n    <v-dialog\r\n      v-model=\"showDialog\"\r\n      fullscreen\r\n      hide-overlay\r\n      transition=\"dialog-bottom-transition\"\r\n    >\r\n      <v-card>\r\n        <v-toolbar dark color=\"primary\">\r\n          <v-btn icon dark @click=\"closeTodoDetail()\">\r\n            <v-icon>mdi-close</v-icon>\r\n          </v-btn>\r\n          <v-toolbar-title>Detail</v-toolbar-title>\r\n        </v-toolbar>\r\n        <v-list>\r\n          <v-list-item>\r\n            <v-text-field\r\n              label=\"할 일\"\r\n              hide-details\r\n              outlined\r\n              :readonly=\"updateMode ? false : true\"\r\n              v-model=\"selectedTodoTitle\"\r\n              @click=\"openUpdateMode()\"\r\n              class=\"pa-4\"\r\n            ></v-text-field>\r\n          </v-list-item>\r\n          <v-list-item>\r\n            <v-textarea\r\n              label=\"메모\"\r\n              hide-details\r\n              outlined\r\n              :readonly=\"updateMode ? false : true\"\r\n              v-model=\"selectedTodoMemo\"\r\n              @click=\"openUpdateMode()\"\r\n              no-resize\r\n              class=\"pa-4\"\r\n            ></v-textarea>\r\n          </v-list-item>\r\n          <v-list-item>\r\n            <v-textarea\r\n              label=\"분류(index)\"\r\n              hide-details\r\n              outlined\r\n              :readonly=\"updateMode ? false : true\"\r\n              v-model=\"selectedTodoIndex\"\r\n              @click=\"openUpdateMode()\"\r\n              no-resize\r\n              class=\"pa-4\"\r\n            ></v-textarea>\r\n          </v-list-item>\r\n        </v-list>\r\n        <v-bottom-navigation fixed>\r\n          <v-row no-gutters v-if=\"!updateMode\">\r\n            <v-col>\r\n              <v-btn block height=\"100%\" @click=\"clickFinish()\">\r\n                <span>완료</span>\r\n              </v-btn>\r\n            </v-col>\r\n            <v-col>\r\n              <v-btn block height=\"100%\" @click=\"clickEdit()\">\r\n                <span>편집</span>\r\n              </v-btn>\r\n            </v-col>\r\n            <v-col>\r\n              <v-btn block height=\"100%\" @click=\"clickDelete()\">\r\n                <span>삭제</span>\r\n              </v-btn>\r\n            </v-col>\r\n          </v-row>\r\n          <v-row no-gutters v-else>\r\n            <v-col>\r\n              <v-btn block height=\"100%\" @click=\"clickCancel()\">\r\n                <span>취소</span>\r\n              </v-btn>\r\n            </v-col>\r\n            <v-col>\r\n              <v-btn block height=\"100%\" @click=\"clickSave()\">\r\n                <span>저장</span>\r\n              </v-btn>\r\n            </v-col>\r\n          </v-row>\r\n        </v-bottom-navigation>\r\n      </v-card>\r\n    </v-dialog>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"propsdata\", \"grouping\"],\r\n  data() {\r\n    return {\r\n      selectedTodo: null, // 선택된 투두아이템 (전체) // 취소 눌렀을때 돌아가게 할려고 만들었음\r\n      selectedTodoTitle: \"\", // 선택된 투두 아이템의 제목\r\n      selectedTodoMemo: \"\", // 선택된 투두 아이템의 메모\r\n      selectedTodoIndex: \"\", // 선택된 투두 아이템의 분류(index)\r\n      showDialog: false, // 상세보기 보여줄건지 말건지\r\n      updateMode: false, // 수정모드인지 아닌지\r\n    };\r\n  },\r\n  methods: {\r\n    // 할 일 완료\r\n    finishTodo(id) {\r\n      this.$emit(\"finishTodo\", id);\r\n    },\r\n\r\n    // 할 일 삭제\r\n    removeTodo(id) {\r\n      this.$emit(\"removeTodo\", id);\r\n    },\r\n\r\n    // 상세보기 보여주기 (여기서 selectedTodo를 세팅함)\r\n    showTodoDetail(todo) {\r\n      // const selectedTodo = this.propsdata.find((item) => item.id === id);\r\n      this.selectedTodo = todo;\r\n      this.selectedTodoTitle = todo.title;\r\n      this.selectedTodoMemo = todo.memo;\r\n      this.selectedTodoIndex = todo.index;\r\n      this.showDialog = true;\r\n    },\r\n\r\n    // 상세보기 닫기 (다 초기화)\r\n    closeTodoDetail() {\r\n      this.selectedTodo = null;\r\n      this.selectedTodoTitle = \"\";\r\n      this.selectedTodoMemo = \"\";\r\n      this.selectedTodoIndex = \"\";\r\n      this.showDialog = false;\r\n      this.updateMode = false;\r\n    },\r\n\r\n    // 수정 모드 진입 (Text Input 눌렀을때 수정모드 진입할 수 있게 하기 위함)\r\n    openUpdateMode() {\r\n      if (!this.updateMode) {\r\n        this.updateMode = true;\r\n      }\r\n    },\r\n\r\n    // 완료 버튼 클릭\r\n    clickFinish() {\r\n      this.finishTodo(this.selectedTodo.id);\r\n      this.showDialog = false;\r\n    },\r\n\r\n    // 편집 버튼 클릭\r\n    clickEdit() {\r\n      this.updateMode = true;\r\n    },\r\n\r\n    // 삭제 버튼 클릭\r\n    clickDelete() {\r\n      this.removeTodo(this.selectedTodo.id);\r\n      this.showDialog = false;\r\n    },\r\n\r\n    // 취소 버튼 클릭\r\n    clickCancel() {\r\n      const { title, memo, index } = this.selectedTodo;\r\n      this.selectedTodoTitle = title;\r\n      this.selectedTodoMemo = memo;\r\n      this.selectedTodoIndex = index;\r\n      this.updateMode = false;\r\n    },\r\n\r\n    // 저장 버튼 클릭\r\n    clickSave() {\r\n      this.$emit(\"updateTodo\", {\r\n        id: this.selectedTodo.id,\r\n        title: this.selectedTodoTitle,\r\n        memo: this.selectedTodoMemo,\r\n        index: this.selectedTodoIndex,\r\n      });\r\n      this.selectedTodo = {\r\n        ...this.selectedTodo,\r\n        title: this.selectedTodoTitle,\r\n        memo: this.selectedTodoMemo,\r\n        index: this.selectedTodoIndex,\r\n      };\r\n      this.updateMode = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.list_item {\r\n  width: 100%;\r\n  text-align: left;\r\n}\r\n.group {\r\n  margin-bottom: 20px;\r\n}\r\n.index {\r\n  text-align: center;\r\n  line-height: 30px;\r\n  color: aliceblue;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}