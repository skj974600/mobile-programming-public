{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/windows10/Desktop/\\uD559\\uAD50 \\uC218\\uC5C5/\\uBAA8\\uBC14\\uC77C\\uD504\\uB85C\\uADF8\\uB798\\uBC0D/public/mobile-programming-public/vue-mobile-todo/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"C:/Users/windows10/Desktop/\\uD559\\uAD50 \\uC218\\uC5C5/\\uBAA8\\uBC14\\uC77C\\uD504\\uB85C\\uADF8\\uB798\\uBC0D/public/mobile-programming-public/vue-mobile-todo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TodoFooter from \"./components/TodoFooter.vue\";\nimport TodoHeader from \"./components/TodoHeader.vue\";\nimport TodoList from \"./components/TodoList.vue\";\nimport TodoInput from \"./components/TodoInput.vue\";\nimport TodoSearch from \"./components/TodoSearch.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    TodoList: TodoList,\n    TodoFooter: TodoFooter,\n    TodoHeader: TodoHeader,\n    TodoInput: TodoInput,\n    TodoSearch: TodoSearch\n  },\n  data: function data() {\n    return {\n      todoItems: [],\n      searchedItems: [],\n      groupedItems: {},\n      propItems: [],\n      searching: false,\n      grouping: false\n    };\n  },\n  methods: {\n    // 할 일 상태인 것들의 개수를 구해주는 메서드\n    getTodoItemsLength: function getTodoItemsLength() {\n      return this.todoItems.filter(function (item) {\n        return item.state === \"todo\";\n      }).length;\n    },\n    // 할 일 등록\n    addTodo: function addTodo(todoItem) {\n      var title = todoItem.title,\n          memo = todoItem.memo,\n          index = todoItem.index;\n      var todoObj = {};\n\n      if (localStorage.getItem(\"todo\") && JSON.parse(localStorage.getItem(\"todo\")).length > 0) {\n        var localTodo = JSON.parse(localStorage.getItem(\"todo\"));\n        todoObj.id = localTodo[localTodo.length - 1].id + 1;\n      } else {\n        todoObj.id = 1;\n      }\n\n      todoObj = _objectSpread(_objectSpread({}, todoObj), {}, {\n        state: \"todo\",\n        title: title || \"\",\n        memo: memo || \"\",\n        index: index || \"\"\n      });\n      this.todoItems.push(todoObj);\n      localStorage.setItem(\"todo\", JSON.stringify(this.todoItems));\n    },\n    // 할 일 완료\n    finishTodo: function finishTodo(id) {\n      this.todoItems = this.todoItems.map(function (item) {\n        if (item.id === id) {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            state: \"done\"\n          });\n        } else {\n          return item;\n        }\n      });\n      localStorage.setItem(\"todo\", JSON.stringify(this.todoItems));\n    },\n    // 할 일 수정\n    updateTodo: function updateTodo(todo) {\n      var updatedTodoIndex = this.todoItems.findIndex(function (item) {\n        return item.id === todo.id;\n      });\n      this.todoItems[updatedTodoIndex] = _objectSpread(_objectSpread({}, todo), {}, {\n        state: \"todo\"\n      });\n      localStorage.setItem(\"todo\", JSON.stringify(this.todoItems));\n    },\n    // 검색 기능\n    searchTodo: function searchTodo(stat) {\n      this.searching = true;\n      this.searchedItems = this.todoItems.filter(function (todo) {\n        var _iterator = _createForOfIteratorHelper(stat.split(\" \")),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var e = _step.value;\n\n            if (todo.title && todo.title.includes(e) || todo.memo && todo.memo.includes(e) || todo.index && todo.index.includes(e)) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return false;\n      });\n    },\n    // 검색기록 삭제\n    removeSearched: function removeSearched() {\n      this.searching = false;\n      this.searchedItems = [];\n    },\n    // 할 일 삭제\n    removeTodo: function removeTodo(id) {\n      this.todoItems = this.todoItems.filter(function (item) {\n        return item.id !== id;\n      });\n      localStorage.setItem(\"todo\", JSON.stringify(this.todoItems));\n    },\n    // 전체삭제\n    removeAll: function removeAll() {\n      localStorage.clear();\n      this.todoItems = [];\n    },\n    showIndexGroup: function showIndexGroup(grouping) {\n      var _this = this;\n\n      console.log(this.grouping);\n      this.grouping = grouping;\n      this.removeSearched();\n\n      if (!grouping) {\n        this.removeGrouped();\n        return;\n      }\n\n      this.todoItems.filter(function (todo) {\n        if (!(todo.index in _this.groupedItems)) {\n          _this.groupedItems[todo.index] = [];\n        }\n\n        _this.groupedItems[todo.index].push(todo);\n      });\n      console.log(this.groupedItems);\n    },\n    removeGrouped: function removeGrouped() {\n      this.groupedItems = {};\n    }\n  },\n  // 비유하자면 파이썬 class __init__ 같은 느낌 (시작하면 로컬스토리지에서 todolist 가져옴)\n  created: function created() {\n    if (localStorage.getItem(\"todo\")) {\n      this.todoItems = JSON.parse(localStorage.getItem(\"todo\"));\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AAEA;AACAA,aADA;AAGAC;AACAC,sBADA;AAEAC,0BAFA;AAGAC,0BAHA;AAIAC,wBAJA;AAKAC;AALA,GAHA;AAWAC,MAXA,kBAWA;AACA;AACAC,mBADA;AAEAC,uBAFA;AAGAC,sBAHA;AAIAC,mBAJA;AAKAC,sBALA;AAMAC;AANA;AAQA,GApBA;AAqBAC;AACA;AACAC,sBAFA,gCAEA;AACA;AAAA;AAAA;AACA,KAJA;AAMA;AACAC,WAPA,mBAOAC,QAPA,EAOA;AACA;AAAA;AAAA;AAEA;;AAEA,UACAC,gCACAC,mDAFA,EAGA;AACA;AACAC;AACA,OANA,MAMA;AACAA;AACA;;AAEAA,gDACAA,OADA;AAEAC,qBAFA;AAGAC,0BAHA;AAIAC,wBAJA;AAKAC;AALA;AAQA;AACAN;AACA,KAhCA;AAkCA;AACAO,cAnCA,sBAmCAC,EAnCA,EAmCA;AACA;AACA;AACA;AAAAL;AAAA;AACA,SAFA,MAEA;AACA;AACA;AACA,OANA;AAOAH;AACA,KA5CA;AA8CA;AACAS,cA/CA,sBA+CAC,IA/CA,EA+CA;AACA,sDACA;AAAA;AAAA,OADA;AAGA;AAAAP;AAAA;AACAH;AACA,KArDA;AAuDA;AACAW,cAxDA,sBAwDAC,IAxDA,EAwDA;AACA;AACA;AAAA,mDACAA,eADA;AAAA;;AAAA;AACA;AAAA;;AACA,gBACAF,wCACAA,kCADA,IAEAA,oCAHA,EAIA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;;AAUA;AACA,OAXA;AAYA,KAtEA;AAwEA;AACAG,kBAzEA,4BAyEA;AACA;AACA;AACA,KA5EA;AA8EA;AACAC,cA/EA,sBA+EAN,EA/EA,EA+EA;AACA;AAAA;AAAA;AACAR;AACA,KAlFA;AAoFA;AACAe,aArFA,uBAqFA;AACAf;AACA;AACA,KAxFA;AA0FAgB,kBA1FA,0BA0FArB,QA1FA,EA0FA;AAAA;;AACAsB;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA,OALA;AAMAA;AACA,KAzGA;AA0GAC,iBA1GA,2BA0GA;AACA;AACA;AA5GA,GArBA;AAoIA;AACAC,SArIA,qBAqIA;AACA;AACA;AACA;AACA;AAzIA","names":["name","components","TodoList","TodoFooter","TodoHeader","TodoInput","TodoSearch","data","todoItems","searchedItems","groupedItems","propItems","searching","grouping","methods","getTodoItemsLength","addTodo","todoItem","localStorage","JSON","todoObj","state","title","memo","index","finishTodo","id","updateTodo","todo","searchTodo","stat","removeSearched","removeTodo","removeAll","showIndexGroup","console","removeGrouped","created"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <v-app-bar app color=\"primary\" dark>\r\n      <div class=\"d-flex align-center\">\r\n        <v-img\r\n          alt=\"Vuetify Logo\"\r\n          class=\"shrink mr-2\"\r\n          contain\r\n          src=\"https://cdn.vuetifyjs.com/images/logos/vuetify-logo-dark.png\"\r\n          transition=\"scale-transition\"\r\n          width=\"40\"\r\n        />\r\n      </div>\r\n      <TodoSearch\r\n        class=\"search\"\r\n        v-on:searchTodo=\"searchTodo\"\r\n        v-on:removeSearched=\"removeSearched\"\r\n        v-bind:searched=\"searchedItems\"\r\n      />\r\n    </v-app-bar>\r\n\r\n    <v-main>\r\n      <div class=\"main_wrapper\">\r\n        <TodoHeader v-if=\"searching\" v-bind:propsdata=\"searchedItems\" />\r\n        <TodoHeader v-else v-bind:propsdata=\"todoItems\" />\r\n        <TodoList\r\n          v-if=\"searching\"\r\n          v-bind:propsdata=\"searchedItems\"\r\n          @finishTodo=\"finishTodo\"\r\n          @updateTodo=\"updateTodo\"\r\n          @removeTodo=\"removeTodo\"\r\n        ></TodoList>\r\n        <TodoList\r\n          v-else-if=\"grouping\"\r\n          v-bind:propsdata=\"groupedItems\"\r\n          v-bind:grouping=\"grouping\"\r\n          @finishTodo=\"finishTodo\"\r\n          @updateTodo=\"updateTodo\"\r\n          @removeTodo=\"removeTodo\"\r\n        ></TodoList>\r\n        <TodoList\r\n          v-else\r\n          v-bind:propsdata=\"todoItems\"\r\n          @finishTodo=\"finishTodo\"\r\n          @updateTodo=\"updateTodo\"\r\n          @removeTodo=\"removeTodo\"\r\n        ></TodoList>\r\n        <TodoFooter\r\n          v-if=\"getTodoItemsLength() > 0\"\r\n          v-on:removeAll=\"removeAll\"\r\n        />\r\n      </div>\r\n    </v-main>\r\n    <TodoInput\r\n      v-on:addTodo=\"addTodo\"\r\n      v-on:showIndexGroup=\"showIndexGroup\"\r\n    ></TodoInput>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport TodoFooter from \"./components/TodoFooter.vue\";\r\nimport TodoHeader from \"./components/TodoHeader.vue\";\r\nimport TodoList from \"./components/TodoList.vue\";\r\nimport TodoInput from \"./components/TodoInput.vue\";\r\nimport TodoSearch from \"./components/TodoSearch.vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n\r\n  components: {\r\n    TodoList,\r\n    TodoFooter,\r\n    TodoHeader,\r\n    TodoInput,\r\n    TodoSearch,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      todoItems: [],\r\n      searchedItems: [],\r\n      groupedItems: {},\r\n      propItems: [],\r\n      searching: false,\r\n      grouping: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 할 일 상태인 것들의 개수를 구해주는 메서드\r\n    getTodoItemsLength() {\r\n      return this.todoItems.filter((item) => item.state === \"todo\").length;\r\n    },\r\n\r\n    // 할 일 등록\r\n    addTodo(todoItem) {\r\n      const { title, memo, index } = todoItem;\r\n\r\n      let todoObj = {};\r\n\r\n      if (\r\n        localStorage.getItem(\"todo\") &&\r\n        JSON.parse(localStorage.getItem(\"todo\")).length > 0\r\n      ) {\r\n        const localTodo = JSON.parse(localStorage.getItem(\"todo\"));\r\n        todoObj.id = localTodo[localTodo.length - 1].id + 1;\r\n      } else {\r\n        todoObj.id = 1;\r\n      }\r\n\r\n      todoObj = {\r\n        ...todoObj,\r\n        state: \"todo\",\r\n        title: title || \"\",\r\n        memo: memo || \"\",\r\n        index: index || \"\",\r\n      };\r\n\r\n      this.todoItems.push(todoObj);\r\n      localStorage.setItem(\"todo\", JSON.stringify(this.todoItems));\r\n    },\r\n\r\n    // 할 일 완료\r\n    finishTodo(id) {\r\n      this.todoItems = this.todoItems.map((item) => {\r\n        if (item.id === id) {\r\n          return { ...item, state: \"done\" };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      localStorage.setItem(\"todo\", JSON.stringify(this.todoItems));\r\n    },\r\n\r\n    // 할 일 수정\r\n    updateTodo(todo) {\r\n      const updatedTodoIndex = this.todoItems.findIndex(\r\n        (item) => item.id === todo.id\r\n      );\r\n      this.todoItems[updatedTodoIndex] = { ...todo, state: \"todo\" };\r\n      localStorage.setItem(\"todo\", JSON.stringify(this.todoItems));\r\n    },\r\n\r\n    // 검색 기능\r\n    searchTodo(stat) {\r\n      this.searching = true;\r\n      this.searchedItems = this.todoItems.filter((todo) => {\r\n        for (let e of stat.split(\" \")) {\r\n          if (\r\n            (todo.title && todo.title.includes(e)) ||\r\n            (todo.memo && todo.memo.includes(e)) ||\r\n            (todo.index && todo.index.includes(e))\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n    },\r\n\r\n    // 검색기록 삭제\r\n    removeSearched() {\r\n      this.searching = false;\r\n      this.searchedItems = [];\r\n    },\r\n\r\n    // 할 일 삭제\r\n    removeTodo(id) {\r\n      this.todoItems = this.todoItems.filter((item) => item.id !== id);\r\n      localStorage.setItem(\"todo\", JSON.stringify(this.todoItems));\r\n    },\r\n\r\n    // 전체삭제\r\n    removeAll() {\r\n      localStorage.clear();\r\n      this.todoItems = [];\r\n    },\r\n\r\n    showIndexGroup(grouping) {\r\n      console.log(this.grouping);\r\n      this.grouping = grouping;\r\n      this.removeSearched();\r\n      if (!grouping) {\r\n        this.removeGrouped();\r\n        return;\r\n      }\r\n      this.todoItems.filter((todo) => {\r\n        if (!(todo.index in this.groupedItems)) {\r\n          this.groupedItems[todo.index] = [];\r\n        }\r\n        this.groupedItems[todo.index].push(todo);\r\n      });\r\n      console.log(this.groupedItems);\r\n    },\r\n    removeGrouped() {\r\n      this.groupedItems = {};\r\n    },\r\n  },\r\n\r\n  // 비유하자면 파이썬 class __init__ 같은 느낌 (시작하면 로컬스토리지에서 todolist 가져옴)\r\n  created() {\r\n    if (localStorage.getItem(\"todo\")) {\r\n      this.todoItems = JSON.parse(localStorage.getItem(\"todo\"));\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nhtml {\r\n  height: 100vh;\r\n  overflow: hidden !important;\r\n}\r\nbody {\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #dbc1d4;\r\n}\r\n#app {\r\n  height: 100%;\r\n}\r\n.v-main {\r\n  height: 100%;\r\n  padding: 0 !important;\r\n  margin: 56px 0px 88px 0px !important;\r\n}\r\n.main_wrapper {\r\n  height: calc(100% - 56px - 88px);\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n}\r\n.shadow {\r\n  -webkit-box-shadow: 0px 0px 5px 0px rgba(181, 181, 181, 1);\r\n  -moz-box-shadow: 0px 0px 5px 0px rgba(181, 181, 181, 1);\r\n  box-shadow: 0px 0px 5px 0px rgba(181, 181, 181, 1);\r\n}\r\n.search {\r\n  margin-left: auto;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module"}